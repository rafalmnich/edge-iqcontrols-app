// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	config "github.com/rafalmnich/edge-iqcontrols-app/internal/config"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// RestPublisher is an autogenerated mock type for the RestPublisher type
type RestPublisher struct {
	mock.Mock
}

// Publish provides a mock function with given fields: device, value
func (_m *RestPublisher) Publish(device config.Device, value string) error {
	ret := _m.Called(device, value)

	var r0 error
	if rf, ok := ret.Get(0).(func(config.Device, string) error); ok {
		r0 = rf(device, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRestPublisher creates a new instance of RestPublisher. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewRestPublisher(t testing.TB) *RestPublisher {
	mock := &RestPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
